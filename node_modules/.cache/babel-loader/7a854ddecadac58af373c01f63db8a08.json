{"ast":null,"code":"var _jsxFileName = \"C:\\\\Venkitesh\\\\Latestupdate-master-main\\\\src\\\\pages\\\\Body.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Input from './Input';\nimport toast from 'react-hot-toast';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Body = () => {\n  _s();\n\n  const user = {\n    // change this\n    username: 'Dine',\n    password: 'out1234'\n  };\n  const [inputValue, setInputValue] = useState({\n    password: '',\n    username: ''\n  });\n  const [inputErrors, setInputErrors] = useState({\n    password: '',\n    username: ''\n  });\n  const navigate = useNavigate();\n\n  const validateUsername = () => {\n    const {\n      username\n    } = inputValue;\n\n    if (!username) {\n      setInputErrors(prevErrors => ({ ...prevErrors,\n        username: 'Username is required'\n      }));\n      return false;\n    } else {\n      setInputErrors(prevErrors => ({ ...prevErrors,\n        username: ''\n      }));\n      return true;\n    }\n  };\n\n  const validatePassword = () => {\n    const {\n      password\n    } = inputValue;\n\n    if (!password) {\n      setInputErrors(prevErrors => ({ ...prevErrors,\n        password: 'Password is required'\n      }));\n      return false;\n    } else {\n      setInputErrors(prevErrors => ({ ...prevErrors,\n        password: ''\n      }));\n      return true;\n    }\n  };\n\n  const {\n    password,\n    username\n  } = inputValue;\n\n  const handleOnChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputValue({ ...inputValue,\n      [name]: value\n    });\n    setInputErrors({ ...inputErrors,\n      [name]: '' // Clear error when typing\n\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const isUsernameValid = validateUsername();\n    const isPasswordValid = validatePassword();\n\n    if (isUsernameValid && isPasswordValid) {\n      if (username === user.username && password === user.password) {\n        toast.success('Logging Successful');\n        navigate('/Dashboard');\n        setInputValue({\n          username: '',\n          password: ''\n        });\n      } else {\n        toast.error('Incorrect credentials');\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"w-full h-[85%] flex flex-col justify-center items-start gap-4 p-10\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: 'text',\n      name: 'username',\n      value: username,\n      placeholder: 'Enter Your Username',\n      onChange: handleOnChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-0.5 visible text-sm text-red-600 dark:text-red-500\",\n      children: inputErrors.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: 'password',\n      name: 'password',\n      value: password,\n      placeholder: 'Enter Your Password',\n      onChange: handleOnChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-0.5 visible text-sm text-red-600 dark:text-red-500\",\n      children: inputErrors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex w-full px-8 gap-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"accent-black\",\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-medium\",\n        children: \"Remember Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"gradient-orange-pink w-full text-white p-2 font-medium\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Body, \"h0oEP2y0Ys2+ve/gGpfSdP6AKEc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["C:/Venkitesh/Latestupdate-master-main/src/pages/Body.jsx"],"names":["React","useState","Input","toast","useNavigate","Body","user","username","password","inputValue","setInputValue","inputErrors","setInputErrors","navigate","validateUsername","prevErrors","validatePassword","handleOnChange","e","name","value","target","handleSubmit","preventDefault","isUsernameValid","isPasswordValid","success","error"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Input from './Input';\nimport toast from 'react-hot-toast';\nimport { useNavigate } from 'react-router-dom';\n\n\nconst Body = () => {\n    const user = {\n        // change this\n        username: 'Dine',\n        password: 'out1234',\n    };\n\n    const [inputValue, setInputValue] = useState({\n        password: '',\n        username: '',\n    });\n\n    const [inputErrors, setInputErrors] = useState({\n        password: '',\n        username: '',\n    });\n\nconst navigate = useNavigate();\n\n    const validateUsername = () => {\n        const { username } = inputValue;\n        if (!username) {\n            setInputErrors((prevErrors) => ({\n                ...prevErrors,\n                username: 'Username is required',\n            }));\n            return false;\n        } else {\n            setInputErrors((prevErrors) => ({\n                ...prevErrors,\n                username: '',\n            }));\n            return true;\n        }\n    };\n\n    const validatePassword = () => {\n        const { password } = inputValue;\n        if (!password) {\n            setInputErrors((prevErrors) => ({\n                ...prevErrors,\n                password: 'Password is required',\n            }));\n            return false;\n        } else {\n            setInputErrors((prevErrors) => ({\n                ...prevErrors,\n                password: '',\n            }));\n            return true;\n        }\n    };\n\n    const { password, username } = inputValue;\n    const handleOnChange = (e) => {\n        const { name, value } = e.target;\n        setInputValue({\n            ...inputValue,\n            [name]: value,\n        });\n        setInputErrors({\n            ...inputErrors,\n            [name]: '', // Clear error when typing\n        });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const isUsernameValid = validateUsername();\n        const isPasswordValid = validatePassword();\n\n        if (isUsernameValid && isPasswordValid) {\n            if (username === user.username && password === user.password) {\n                toast.success('Logging Successful');\n                navigate('/Dashboard');\n                setInputValue({\n                    username: '',\n                    password: '',\n                });\n            } else {\n                toast.error('Incorrect credentials');\n            }\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit} className='w-full h-[85%] flex flex-col justify-center items-start gap-4 p-10'>\n            <Input\n                type={'text'}\n                name={'username'}\n                value={username}\n                placeholder={'Enter Your Username'}\n                onChange={handleOnChange}\n            />\n            <p className='mt-0.5 visible text-sm text-red-600 dark:text-red-500'>{inputErrors.username}</p>\n            <Input\n                type={'password'}\n                name={'password'}\n                value={password}\n                placeholder={'Enter Your Password'}\n                onChange={handleOnChange}\n            />\n            <p className='mt-0.5 visible text-sm text-red-600 dark:text-red-500'>{inputErrors.password}</p>\n            <div className='flex w-full px-8 gap-3'>\n                <input className='accent-black' type='checkbox' />\n                <p className='font-medium'>Remember Password</p>\n            </div>\n            <button type='submit' className='gradient-orange-pink w-full text-white p-2 font-medium'>\n                Login\n            </button>\n        </form>\n    );\n};\n\nexport default Body;\n"]},"metadata":{},"sourceType":"module"}